// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class tokencreated extends ethereum.Event {
  get params(): tokencreated__Params {
    return new tokencreated__Params(this);
  }
}

export class tokencreated__Params {
  _event: tokencreated;

  constructor(event: tokencreated) {
    this._event = event;
  }

  get tokenaddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }

  get deci(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get metadata(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class DaoFactory extends ethereum.SmartContract {
  static bind(address: Address): DaoFactory {
    return new DaoFactory("DaoFactory", address);
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get supply(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get deci(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[3].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[4].value.toString();
  }

  get metadata(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}
